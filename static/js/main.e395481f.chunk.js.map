{"version":3,"sources":["components/Loader/Loader.js","App.js","index.js"],"names":["Loader","className","App","useState","data","setData","loading","setLoading","search","setSearch","univers","setUnivers","searchUnivers","setSearchUnivers","useEffect","a","fetch","referrerPolicy","res","json","fetchData","filterNames","filter","univer","country","toLowerCase","includes","err","console","log","type","placeholder","value","onChange","e","preventDefault","target","onClick","map","d","index","name","alpha_two_code","domains","i","web_pages","page","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAeeA,EAZA,WACX,OACI,sBAAKC,UAAU,kBAAf,UACI,qBAAKA,UAAU,4BACf,qBAAKA,UAAU,4BACf,qBAAKA,UAAU,4BACf,qBAAKA,UAAU,4BACf,qBAAKA,UAAU,gCCsGZC,G,MA5GH,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAEPC,EAFO,KAEDC,EAFC,OAIgBF,oBAAS,GAJzB,mBAIPG,EAJO,KAIEC,EAJF,OAKcJ,mBAAS,IALvB,mBAKPK,EALO,KAKCC,EALD,OAMgBN,mBAAS,IANzB,mBAMPO,EANO,KAMEC,EANF,OAO4BR,mBAAS,IAPrC,mBAOPS,EAPO,KAOQC,EAPR,KASdC,qBAAU,WACN,KAAI,uCACA,8BAAAC,EAAA,sEACoBC,MAAM,4DAA6D,CAU/EC,eAAgB,eAXxB,cACQC,EADR,gBAcqBA,EAAIC,OAdzB,OAcQf,EAdR,OAeIC,EAAQD,GAfZ,2CADA,qDAkBAgB,GAEA,IAAIC,EAAcjB,EAAKkB,QAAO,SAAAC,GAAM,OAAIA,EAAOC,QAAQC,cAAcC,SAASlB,EAAOiB,kBACrFd,EAAWU,GAEb,MAAOM,GACLC,QAAQC,IAAIF,MAGjB,CAACnB,IAoBJ,OACI,qCACI,qBAAKP,UAAU,YAAf,SACI,iCACI,qBAAKA,UAAU,iBAAf,SACI,uBAAO6B,KAAK,OACLC,YAAY,GACZC,MAAOxB,EACPyB,SA1BH,SAAAC,GACpBA,EAAEC,iBACF1B,EAAUyB,EAAEE,OAAOJ,YA2BP,qBAAK/B,UAAU,MAAMoC,QAxBpB,WACbT,QAAQC,IAAInB,GACZH,GAAW,GACXM,EAAiB,YAAIH,IACrBH,GAAW,IAoBC,oEACA,qBAAKN,UAAU,MAAMoC,QAlBjB,WAChBxB,EAAiB,IACjBJ,EAAU,IACVF,GAAW,IAeC,mEAIJD,EACM,cAAC,EAAD,IAEFM,EAAc0B,KAAI,SAACC,EAAGC,GAClB,OACI,sBAA0BvC,UAAU,YAApC,UACI,qBAAIA,UAAU,iBAAd,UAA+B,iCAAOuC,EAAQ,EAAf,OAA/B,IAA0DD,EAAEE,QAC5D,sBAAKxC,UAAU,iBAAf,UACI,gCAAK,0CAAkBsC,EAAEG,eAAzB,MAA4CH,EAAEf,WAC9C,gCAAK,yCAAiBe,EAAEI,QAAQL,KAAI,SAACC,EAAGK,GACpC,OACI,gCAAyBA,EAAI,EAA7B,KAAkCL,IAAlC,gBAAmBK,UAG3B,gCAAK,4CAEGL,EAAEM,UAAUP,KAAI,SAACQ,EAAMN,GACnB,OACI,mCACI,8BACI,gCAAMA,EAAQ,EAAd,KAAkB,mBAAGO,KAAMD,EAAT,SAAgBA,QADtC,cAAiBN,iBAdnCD,EAAEE,KAAOD,WC9E/CQ,IAASC,OACD,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAERC,SAASC,eAAe,W","file":"static/js/main.e395481f.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.sass';\n\nconst Loader = () => {\n    return (\n        <div className=\"containerLoader\">\n            <div className=\"containerLoader-element\"/>\n            <div className=\"containerLoader-element\"/>\n            <div className=\"containerLoader-element\"/>\n            <div className=\"containerLoader-element\"/>\n            <div className=\"containerLoader-element\"/>\n        </div>\n    )\n}\n\nexport default Loader;\n","import React, {useState, useEffect} from 'react';\nimport Loader from \"./components/Loader/Loader\";\nimport './App.sass';\n\nconst App = () => {\n\n    const [data, setData] = useState([]);\n\n    const [loading, setLoading] = useState(true);\n    const [search, setSearch] = useState(\"\");\n    const [univers, setUnivers] = useState([]);\n    const [searchUnivers, setSearchUnivers] = useState([]);\n\n    useEffect(() => {\n        try {\n            async function fetchData() {\n                let res = await fetch(`http://universities.hipolabs.com/search?name/?format=json`, {\n                    // method: 'GET', // *GET, POST, PUT, DELETE, etc.\n                    // mode: 'same-origin', // no-cors, *cors, same-origin\n                    //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                    //credentials: 'same-origin', // include, *same-origin, omit\n                    // headers: {\n                    //     'Content-Type': 'application/json'\n                    //     // 'Content-Type': 'application/x-www-form-urlencoded',\n                    // },\n                    //redirect: 'follow', // manual, *follow, error\n                    referrerPolicy: 'unsafe-url', // no-referrer, *client\n                    //body: \"Content-Type\" // body data type must match \"Content-Type\" header\n                });\n                let data = await res.json();\n                setData(data);\n            }\n            fetchData();\n\n            let filterNames = data.filter(univer => univer.country.toLowerCase().includes(search.toLowerCase()));\n            setUnivers(filterNames);\n\n        } catch (err) {\n            console.log(err);\n        }\n\n    }, [search]);\n\n    const onHandlerChange = e => {\n        e.preventDefault();\n        setSearch(e.target.value);\n    }\n\n    const setValue = () => {\n        console.log(univers);\n        setLoading(true);\n        setSearchUnivers([...univers]);\n        setLoading(false);\n    }\n\n    const deleteValue = () => {\n        setSearchUnivers([]);\n        setSearch('');\n        setLoading(true);\n    }\n\n    return (\n        <>\n            <div className='container'>\n                <form>\n                    <div className='inputContainer'>\n                        <input type=\"text\"\n                               placeholder=''\n                               value={search}\n                               onChange={onHandlerChange}\n                        />\n                    </div>\n                    <div className='btn' onClick={setValue}>Отправить</div>\n                    <div className='btn' onClick={deleteValue}>Сбросить</div>\n                </form>\n            </div>\n            {\n                loading\n                    ? <Loader/>\n                    :\n                    searchUnivers.map((d, index) => {\n                        return (\n                            <div key={d.name + index} className=\"container\">\n                                <h1 className=\"nameUniversity\"><span>{index + 1}.</span> {d.name}</h1>\n                                <div className=\"infoUniversity\">\n                                    <div><h3>Country:</h3>{d.alpha_two_code} - {d.country}</div>\n                                    <div><h3>Domain:</h3>{d.domains.map((d, i) => {\n                                        return (\n                                            <div key={`domain${i}`}>{i + 1}. {d}</div>\n                                        )\n                                    })}</div>\n                                    <div><h3>Web pages:</h3>\n                                        {\n                                            d.web_pages.map((page, index) => {\n                                                return (\n                                                    <>\n                                                        <div key={`page${index}`}>\n                                                            <div>{index + 1}. <a href={page}>{page}</a></div>\n                                                        </div>\n                                                    </>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n        </>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}